name: CI Workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mlflow:
        image: ghcr.io/mlflow/mlflow:v2.19.0
        ports:
          - 5000:5000
        options: >-
          --health-cmd "wget --no-verbose --tries=1 --spider http://localhost:5000/health || exit 1"
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 10
          --health-start-period 20s
        env:
          GUNICORN_CMD_ARGS: "--timeout 120 --workers 2"
          BACKEND_STORE_URI: "sqlite:///mlflow.db"
          ARTIFACT_ROOT: "./mlruns"
          MLFLOW_SERVER_HOST: "0.0.0.0"
          MLFLOW_SERVER_PORT: "5000"
        volumes:
          - /tmp/mlflow:/mlflow

    steps:
      - name: Debug network
        run: |
          docker ps -a
          netstat -tulpn
          curl -v http://localhost:5000/health || true
        
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          
      - name: Install dependencies with uv
        run: |
          uv pip install --upgrade pip
          uv pip install .[dev]
          
      - name: Verify MLflow availability
        run: |
          for i in {1..10}; do
            echo "Attempt $i to connect to MLflow..."
            if curl -v http://localhost:5000/health 2>&1; then
              echo "MLflow is responding!"
              break
            fi
            if [ $i -eq 10 ]; then
              echo "MLflow failed to start after 10 attempts"
              docker logs $(docker ps -aq --filter "ancestor=ghcr.io/mlflow/mlflow:v2.19.0")
              exit 1
            fi
            sleep 5
          done
          
      - name: Lint code with Ruff
        run: |
          ruff check .
          
      - name: Test with pytest
        env:
          MLFLOW_TRACKING_URI: http://localhost:5000
        run: |
          pytest
